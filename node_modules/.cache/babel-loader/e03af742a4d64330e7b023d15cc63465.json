{"ast":null,"code":"import { actions } from './actions';\n\nconst saveToLocalStorage = object => {\n  localStorage.setItem(\"items\", JSON.stringify(object));\n};\n\nconst initialState = {\n  items: JSON.parse(localStorage.getItem(\"items\")) !== null ? JSON.parse(localStorage.getItem(\"items\")) : []\n};\nexport default function onlineStoreApp(state = initialState, action) {\n  switch (action.type) {\n    case actions.ADD_TO_CART:\n      return Object.assign({}, state, {\n        items: [...state.items, action.payload]\n      });\n\n    case actions.UPDATE_CART:\n      console.log(`item : ${action.payload.id}`);\n      return Object.assign({}, state, {\n        items: state.items.map(item => {\n          return item.id === action.payload.id ? Object.assign({}, item, {\n            quantity: action.payload.quantity\n          }) : item;\n        })\n      });\n\n    case actions.REMOVE_FROM_CART:\n      console.log(state.items);\n      return Object.assign({}, state, {\n        items: state.items.filter(item => {\n          return item.id != action.payload;\n        })\n      });\n\n    case actions.SAVE_CART:\n      saveToLocalStorage(action.payload.items);\n      return state;\n\n    default:\n      return state;\n\n    case actions.RESET_CART:\n      saveToLocalStorage([]);\n      return Object.assign({}, state, {\n        items: state.items.filter(item => {})\n      });\n  }\n}","map":{"version":3,"sources":["/Users/krzyzostoniak/Documents/grocery-delivery/src/app/lib/reducers.js"],"names":["actions","saveToLocalStorage","object","localStorage","setItem","JSON","stringify","initialState","items","parse","getItem","onlineStoreApp","state","action","type","ADD_TO_CART","Object","assign","payload","UPDATE_CART","console","log","id","map","item","quantity","REMOVE_FROM_CART","filter","SAVE_CART","RESET_CART"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;;AAGA,MAAMC,kBAAkB,GAAGC,MAAM,IAAI;AACjCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA9B;AACH,CAFD;;AAGA,MAAMK,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAX,MAA8C,IAA9C,GAAqDL,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAX,CAArD,GAAiG;AADxF,CAArB;AAIA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGL,YAAhC,EAA8CM,MAA9C,EAAsD;AACjE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,OAAO,CAACe,WAAb;AAA2B,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEJ,QAAAA,KAAK,EAAG,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBK,MAAM,CAACK,OAAxB;AAAV,OAAzB,CAAP;;AAC3B,SAAKlB,OAAO,CAACmB,WAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASR,MAAM,CAACK,OAAP,CAAeI,EAAG,EAAxC;AACA,aAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BJ,QAAAA,KAAK,EAAGI,KAAK,CAACJ,KAAN,CAAYe,GAAZ,CAAgBC,IAAI,IAAI;AAC5B,iBAAOA,IAAI,CAACF,EAAL,KAAYT,MAAM,CAACK,OAAP,CAAeI,EAA3B,GACPN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBO,IAAlB,EAAwB;AACpBC,YAAAA,QAAQ,EAAEZ,MAAM,CAACK,OAAP,CAAeO;AADL,WAAxB,CADO,GAGFD,IAHL;AAIH,SALO;AADoB,OAAzB,CAAP;;AAQA,SAAKxB,OAAO,CAAC0B,gBAAb;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACJ,KAAlB;AACA,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAA0B;AAC7BJ,QAAAA,KAAK,EAAGI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAmBH,IAAI,IAAI;AAC/B,iBAAOA,IAAI,CAACF,EAAL,IAAWT,MAAM,CAACK,OAAzB;AACH,SAFO;AADqB,OAA1B,CAAP;;AAKA,SAAKlB,OAAO,CAAC4B,SAAb;AACA3B,MAAAA,kBAAkB,CAACY,MAAM,CAACK,OAAP,CAAeV,KAAhB,CAAlB;AACA,aAAOI,KAAP;;AACA;AAAS,aAAOA,KAAP;;AACT,SAAKZ,OAAO,CAAC6B,UAAb;AACA5B,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACA,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAA0B;AAC/BJ,QAAAA,KAAK,EAAGI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAmBH,IAAI,IAAI,CAClC,CADO;AADuB,OAA1B,CAAP;AAzBJ;AAkCH","sourcesContent":["import { actions } from './actions'\n\n\nconst saveToLocalStorage = object => {\n    localStorage.setItem(\"items\", JSON.stringify(object))\n}\nconst initialState = {\n    items : JSON.parse(localStorage.getItem(\"items\")) !== null ? JSON.parse(localStorage.getItem(\"items\")) : []\n}\n\nexport default function onlineStoreApp(state = initialState, action) {\n    switch(action.type) {\n        case actions.ADD_TO_CART : return Object.assign({}, state, { items : [...state.items, action.payload]});\n        case actions.UPDATE_CART : \n        console.log(`item : ${action.payload.id}`)\n        return Object.assign({}, state, {\n            items : state.items.map(item => {\n                return item.id === action.payload.id ?\n                Object.assign({}, item, {\n                    quantity: action.payload.quantity\n                }) : item;\n            }) \n        })\n        case actions.REMOVE_FROM_CART : \n        console.log(state.items)\n        return Object.assign({}, state,  {\n            items : state.items.filter(item => {\n                return item.id != action.payload\n            })\n        })\n        case actions.SAVE_CART: \n        saveToLocalStorage(action.payload.items)\n        return state\n        default: return state\n        case actions.RESET_CART: \n        saveToLocalStorage([])\n        return Object.assign({}, state,  {\n          items : state.items.filter(item => {\n          })\n      })\n\n\n\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}