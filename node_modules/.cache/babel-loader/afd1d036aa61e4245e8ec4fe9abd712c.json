{"ast":null,"code":"import { actions } from '../actions';\nconst {\n  ADD_TO_CART,\n  SAVE_CART,\n  UPDATE_CART,\n  REMOVE_FROM_CART\n} = actions;\n\nconst saveToLocalstorage = object => {\n  localStorage.setItem(\"items\", JSON.stringify(object));\n};\n\nconst initialState = {\n  items: JSON.parse(localStorage.getItem(\"items\")) != null ? JSON.parse(localStorage.getItem(\"items\")) : [],\n  total: 0\n};\nexport default function onlineStoreApp(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return Object.assign({}, state, {\n        items: [...state.items, action.payload]\n      });\n\n    case UPDATE_CART:\n      return Object.assign({}, state, {\n        items: state.items.map(item => {\n          return item.id === action.payload.item.id ? Object.assign({}, item, {\n            quantity: action.payload.quantity\n          }) : item;\n        })\n      });\n\n    case REMOVE_FROM_CART:\n      return Object.assign({}, state, {\n        items: state.items.filter(item => {\n          return item.id != action.payload.id;\n        })\n      });\n\n    case SAVE_CART:\n      saveToLocalstorage(action.payload.items);\n      return Object.assign({}, state, {\n        items: action.payload.items\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/krzyzostoniak/Documents/grocery-delivery/src/app/lib/reducers.js"],"names":["actions","ADD_TO_CART","SAVE_CART","UPDATE_CART","REMOVE_FROM_CART","saveToLocalstorage","object","localStorage","setItem","JSON","stringify","initialState","items","parse","getItem","total","onlineStoreApp","state","action","type","Object","assign","payload","map","item","id","quantity","filter"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,WAA1B;AAAuCC,EAAAA;AAAvC,IAA4DJ,OAAlE;;AAEA,MAAMK,kBAAkB,GAAGC,MAAM,IAAI;AAClCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA9B;AACF,CAFD;;AAGA,MAAMK,YAAY,GAAG;AACnBC,EAAAA,KAAK,EACHH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAX,KAA6C,IAA7C,GACIL,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAX,CADJ,GAEI,EAJa;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAOA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGN,YAAhC,EAA8CO,MAA9C,EAAsD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,WAAL;AACA,aAAOmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACI,OAAxB;AAAR,OAAzB,CAAP;;AACA,SAAKnB,WAAL;AACE,aAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAgBC,IAAI,IAAI;AAC7B,iBAAOA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACI,OAAP,CAAeE,IAAf,CAAoBC,EAAhC,GACHL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBG,IAAlB,EAAwB;AACtBE,YAAAA,QAAQ,EAAER,MAAM,CAACI,OAAP,CAAeI;AADH,WAAxB,CADG,GAIHF,IAJJ;AAKD,SANM;AADuB,OAAzB,CAAP;;AASF,SAAKpB,gBAAL;AACE,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYe,MAAZ,CAAmBH,IAAI,IAAI;AAChC,iBAAOA,IAAI,CAACC,EAAL,IAAWP,MAAM,CAACI,OAAP,CAAeG,EAAjC;AACD,SAFM;AADuB,OAAzB,CAAP;;AAKF,SAAKvB,SAAL;AACEG,MAAAA,kBAAkB,CAACa,MAAM,CAACI,OAAP,CAAeV,KAAhB,CAAlB;AACA,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACL,QAAAA,KAAK,EAAEM,MAAM,CAACI,OAAP,CAAeV;AAAvB,OAAzB,CAAP;;AACF;AACE,aAAOK,KAAP;AAvBJ;AAyBH","sourcesContent":["import { actions } from '../actions'\nconst { ADD_TO_CART, SAVE_CART, UPDATE_CART, REMOVE_FROM_CART } = actions\n \nconst saveToLocalstorage = object => {\n   localStorage.setItem(\"items\", JSON.stringify(object));\n}\nconst initialState = {\n  items:\n    JSON.parse(localStorage.getItem(\"items\")) != null\n      ? JSON.parse(localStorage.getItem(\"items\"))\n      : [],\n  total: 0\n};\nexport default function onlineStoreApp(state = initialState, action) {\n    switch (action.type) {\n      case ADD_TO_CART: \n      return Object.assign({}, state, {items: [...state.items, action.payload]});\n      case UPDATE_CART:\n        return Object.assign({}, state, {\n          items: state.items.map(item => {\n            return item.id === action.payload.item.id\n              ? Object.assign({}, item, {\n                  quantity: action.payload.quantity\n                })\n              : item;\n          })\n        });\n      case REMOVE_FROM_CART:\n        return Object.assign({}, state, {\n          items: state.items.filter(item => {\n            return item.id != action.payload.id;\n          })\n        });\n      case SAVE_CART:\n        saveToLocalstorage(action.payload.items);\n        return Object.assign({}, state, {items: action.payload.items});\n      default:\n        return state;\n    }\n}   \n"]},"metadata":{},"sourceType":"module"}